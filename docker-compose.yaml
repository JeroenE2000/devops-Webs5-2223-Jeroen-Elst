version: '3.9'
services:
  # mongodb
  mongodb:
    image: mongo:latest
    restart: always
    env_file: ./.env
    ports:
      - 12347:27017
    expose:
      - 27017
    
  db-exporter:
    image: bitnami/mongodb-exporter:0.11
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    restart: always
    ports: 
      - 9216:9216

  #Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    depends_on:
      - mongodb
      - rabbitmq
      - api-gateway
      - authenticationservice
      - externalservice
      - scoreservice
      - targetservice
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  #Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus

  #rabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
        - 15672:15672
        - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3


  # api-gateway    
  api-gateway:
    build: 
      context: ./Api_Gateway
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - 3016:3016
    environment:
      MICROSERVICE_BASE_PORT: http://api-gateway:3016
      TARGET_SERVICE_URL: http://targetservice:3012
      SCORE_SERVICE_URL: http://scoreservice:3038
      EXTERNAL_SERVICE_URL: http://externalservice:3039
      AUTHENTICATION_SERVICE_URL: http://authenticationservice:3015
      JWT_SECRET: tasmanianDevil
    depends_on:
      - mongodb
  
  # microservice authentication-service
  authenticationservice:
    build: 
      context: ./AuthenticationService
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - 3015:3015
    environment:
      AUTHENTICATION_SERVICE_PORT: 3015
      AUTHENTICATIONSERVICE_DB_CONNECTION: mongodb://mongodb:27017/auth
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  # microservice external-service
  externalservice:
    build: 
      context: ./ExterneService
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - 3039:3039
    environment:
      EXTERNAL_SERVICE_PORT: 3039
      EXTERNESERVICE_DB_CONNECTION: mongodb://mongodb:27017/photoprestiges
      OPAQUE_TOKEN: 1234567890
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  # microservice score-service
  scoreservice:
    build: 
      context: ./ScoreService
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - 3038:3038
    environment:
      SCORE_SERVICE_PORT: 3038
      SCORESERVICE_DB_CONNECTION: mongodb://mongodb:27017/score
      OPAQUE_TOKEN: 1234567890
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  targetservice:
    build: 
      context: ./TargetService
      dockerfile: Dockerfile
    env_file: ./.env
    ports:
      - 3012:3012
    environment:
      TARGET_SERVICE_PORT: 3012
      TARGETSERVICE_DB_CONNECTION: mongodb://mongodb:27017/target
      OPAQUE_TOKEN: 1234567890
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy

volumes:
  prometheus-data: